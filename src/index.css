@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Light Orange Theme (matches provided design) */
    --background: 0 0% 100%;          /* white */
    --foreground: 0 0% 10%;           /* near-black text */

    --card: 30 95% 90%;               /* peach card */
    --card-foreground: 0 0% 10%;      /* dark text on card */

    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 10%;

    --primary: 32 100% 50%;           /* vivid orange */
    --primary-foreground: 0 0% 100%;  /* white text on orange */

    --secondary: 32 95% 60%;          /* lighter orange */
    --secondary-foreground: 0 0% 10%;

    --accent: 25 95% 55%;
    --accent-foreground: 0 0% 10%;

    --muted: 30 40% 96%;              /* very light peach/gray */
    --muted-foreground: 0 0% 40%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 0 0% 85%;               /* light borders */
    --input: 0 0% 95%;
    --ring: 32 100% 50%;

    --radius: 0.5rem;

    /* Orange glow effects */
    --glow-orange: 0 0 20px rgba(255, 165, 0, 0.4);
    --glow-amber: 0 0 20px rgba(251, 191, 36, 0.4);
    --glow-cream: 0 0 15px rgba(254, 243, 199, 0.3);

    /* Orange gradients */
    --gradient-orange: linear-gradient(135deg, hsl(32 100% 50% / 0.2), hsl(25 95% 55% / 0.2));
    --gradient-card: linear-gradient(0deg, hsl(30 95% 90%), hsl(30 95% 90%)); /* flat peach */
    --gradient-button: linear-gradient(135deg, hsl(32 100% 50%), hsl(25 95% 55%));

    /* Sidebar (light variant) */
    --sidebar-background: 0 0% 100%;
    --sidebar-foreground: 0 0% 10%;
    --sidebar-primary: 32 100% 50%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 30 95% 90%;
    --sidebar-accent-foreground: 0 0% 10%;
    --sidebar-border: 0 0% 90%;
    --sidebar-ring: 32 100% 50%;
  }
}

@layer base {
  * {
    @apply border-border;
    cursor: auto;
  }

  body {
    @apply bg-background text-foreground font-inter overflow-x-hidden;
    font-family: 'Inter', sans-serif;
  }
}

@layer components {
  .custom-cursor {
    position: fixed;
    width: 12px;
    height: 12px;
    background: hsl(var(--primary));
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
    box-shadow: var(--glow-orange);
    transition: all 0.1s ease-out;
  }

  .custom-cursor.hover {
    width: 20px;
    height: 20px;
    background: hsl(var(--accent));
    box-shadow: var(--glow-amber);
  }

  .glow-effect {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.4);
  }

  .glow-orange {
    box-shadow: 0 0 20px hsl(var(--secondary) / 0.4);
  }

  .glow-amber {
    box-shadow: 0 0 20px hsl(var(--accent) / 0.4);
  }

  .animate-fade-in {
    animation: fadeIn 0.6s ease-out;
  }

  .animate-slide-in {
    animation: slideIn 0.6s ease-out;
  }

  .card-hover {
    transition: all 0.3s ease;
  }

  .card-hover:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px hsl(var(--primary) / 0.2);
  }

  /* Subtle pop for interactive buttons */
  .btn-pop {
    transition: transform 0.15s ease, box-shadow 0.2s ease;
  }

  .btn-pop:hover {
    transform: translateY(-1px) scale(1.02);
    box-shadow: 0 8px 20px hsl(var(--primary) / 0.25);
  }

  .btn-pop:active {
    transform: translateY(0) scale(0.99);
    box-shadow: 0 4px 12px hsl(var(--primary) / 0.2);
  }

  /* MacBook Dock Magnification Effect */
  .dock-nav {
    position: relative;
    display: flex;
    align-items: center;
    gap: 1.25rem;
  }

  .dock-item {
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    transform-origin: center bottom;
    z-index: 1;
  }

  .dock-item:hover {
    transform: scale(1.2) translateY(-2px);
    z-index: 10;
  }

  /* Adjacent items get slightly magnified when neighbor is hovered */
  .dock-item:hover + .dock-item,
  .dock-item:has(+ .dock-item:hover) {
    transform: scale(1.05) translateY(-1px);
    z-index: 5;
  }

  /* Second adjacent items get subtle magnification */
  .dock-item:hover + .dock-item + .dock-item,
  .dock-item:has(+ .dock-item + .dock-item:hover) {
    transform: scale(1.02) translateY(-0.5px);
    z-index: 3;
  }

  /* Enhanced shadow and glow for hovered item */
  .dock-item:hover {
    box-shadow: 
      0 8px 25px rgba(0, 0, 0, 0.15),
      0 0 20px hsl(var(--primary) / 0.3);
    background: hsl(var(--primary) / 0.1);
    color: hsl(var(--primary));
  }

  /* Smooth transition for all dock items */
  .dock-nav:hover .dock-item:not(:hover) {
    transition: all 0.2s ease-out;
  }

  /* Feature Cards */
  .feature-card {
    padding: 2rem;
    border-radius: 1rem;
    background: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
    transform: translateY(30px);
  }

  .feature-card.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  .feature-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    background: rgba(255, 255, 255, 0.9);
  }

  /* Scroll-triggered animations */
  .scroll-reveal {
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .scroll-reveal.revealed {
    opacity: 1;
    transform: translateY(0);
  }

  /* Staggered animation delays */
  .scroll-reveal:nth-child(1) { transition-delay: 0.1s; }
  .scroll-reveal:nth-child(2) { transition-delay: 0.2s; }
  .scroll-reveal:nth-child(3) { transition-delay: 0.3s; }
  .scroll-reveal:nth-child(4) { transition-delay: 0.4s; }

  /* Video Background Styles */
  .video-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    object-fit: cover;
  }

  .video-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(0,0,0,0.4) 0%, rgba(0,0,0,0.2) 50%, rgba(0,0,0,0.5) 100%);
  }

  /* Mobile video optimization */
  @media (max-width: 768px) {
    .video-background {
      object-position: center center;
    }
  }

  /* Ensure text readability over video */
  .text-over-video {
    text-shadow: 0 2px 4px rgba(0,0,0,0.8);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}
